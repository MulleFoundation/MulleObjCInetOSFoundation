#
# cmake/_Dependencies.cmake is generated by `mulle-sde`. Edits will be lost.
#
if( MULLE_TRACE_INCLUDE)
   message( STATUS "# Include \"${CMAKE_CURRENT_LIST_FILE}\"" )
endif()

if( NOT BASE_LIBRARY)
   find_library( BASE_LIBRARY NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}MulleObjCOSBaseFoundation${CMAKE_STATIC_LIBRARY_SUFFIX} MulleObjCOSBaseFoundation ${CMAKE_STATIC_LIBRARY_PREFIX}Base${CMAKE_STATIC_LIBRARY_SUFFIX} Base)
   message( STATUS "BASE_LIBRARY is ${BASE_LIBRARY}")
   #
   # the order looks ascending, but due to the way this file is read
   # it ends up being descending, which is what we need
   if( BASE_LIBRARY)
      #
      # Add to BASE_LIBRARY list.
      # Disable with: `mark no-cmakeadd`
      #
      set( ALL_LOAD_DEPENDENCY_LIBRARIES
         ${ALL_LOAD_DEPENDENCY_LIBRARIES}
         ${BASE_LIBRARY}
         CACHE INTERNAL "need to cache this"
      )
      #
      # Inherit ObjC loader and link dependency info.
      # Disable with: `mark no-cmakeinherit`
      #
      # // temporarily expand CMAKE_MODULE_PATH
      get_filename_component( _TMP_BASE_ROOT "${BASE_LIBRARY}" DIRECTORY)
      get_filename_component( _TMP_BASE_ROOT "${_TMP_BASE_ROOT}" DIRECTORY)
      #
      #
      # Search for "DependenciesAndLibraries.cmake" to include.
      # Disable with: `mark no-cmakedependency`
      #
      foreach( _TMP_BASE_NAME "MulleObjCOSBaseFoundation" "Base")
         set( _TMP_BASE_DIR "${_TMP_BASE_ROOT}/include/${_TMP_BASE_NAME}/cmake")
         # use explicit path to avoid "surprises"
         if( EXISTS "${_TMP_BASE_DIR}/DependenciesAndLibraries.cmake")
            unset( BASE_DEFINITIONS)
            list( INSERT CMAKE_MODULE_PATH 0 "${_TMP_BASE_DIR}")
            # we only want top level INHERIT_OBJC_LOADERS, so disable them
            if( NOT NO_INHERIT_OBJC_LOADERS)
               set( NO_INHERIT_OBJC_LOADERS OFF)
            endif()
            list( APPEND _TMP_INHERIT_OBJC_LOADERS ${NO_INHERIT_OBJC_LOADERS})
            set( NO_INHERIT_OBJC_LOADERS ON)
            #
            include( "${_TMP_BASE_DIR}/DependenciesAndLibraries.cmake")
            #
            list( GET _TMP_INHERIT_OBJC_LOADERS -1 NO_INHERIT_OBJC_LOADERS)
            list( REMOVE_AT _TMP_INHERIT_OBJC_LOADERS -1)
            #
            list( REMOVE_ITEM CMAKE_MODULE_PATH "${_TMP_BASE_DIR}")
            set( INHERITED_DEFINITIONS
               ${INHERITED_DEFINITIONS}
               ${BASE_DEFINITIONS}
               CACHE INTERNAL "need to cache this"
            )
            break()
         else()
            message( STATUS "${_TMP_BASE_DIR}/DependenciesAndLibraries.cmake not found")
         endif()
      endforeach()
      #
      # Search for "objc-loader.inc" in include directory.
      # Disable with: `mark no-cmakeloader`
      #
      if( NOT NO_INHERIT_OBJC_LOADERS)
         foreach( _TMP_BASE_NAME "MulleObjCOSBaseFoundation" "Base")
            set( _TMP_BASE_FILE "${_TMP_BASE_ROOT}/include/${_TMP_BASE_NAME}/objc-loader.inc")
            if( EXISTS "${_TMP_BASE_FILE}")
               set( INHERITED_OBJC_LOADERS
                  ${INHERITED_OBJC_LOADERS}
                  ${_TMP_BASE_FILE}
                  CACHE INTERNAL "need to cache this"
               )
               break()
            endif()
         endforeach()
      endif()
   else()
      message( FATAL_ERROR "BASE_LIBRARY was not found")
   endif()
endif()


if( NOT POSIX_LIBRARY)
   find_library( POSIX_LIBRARY NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}MulleObjCPosixFoundation${CMAKE_STATIC_LIBRARY_SUFFIX} MulleObjCPosixFoundation ${CMAKE_STATIC_LIBRARY_PREFIX}Posix${CMAKE_STATIC_LIBRARY_SUFFIX} Posix)
   message( STATUS "POSIX_LIBRARY is ${POSIX_LIBRARY}")
   #
   # the order looks ascending, but due to the way this file is read
   # it ends up being descending, which is what we need
   if( POSIX_LIBRARY)
      #
      # Add to POSIX_LIBRARY list.
      # Disable with: `mark no-cmakeadd`
      #
      set( ALL_LOAD_DEPENDENCY_LIBRARIES
         ${ALL_LOAD_DEPENDENCY_LIBRARIES}
         ${POSIX_LIBRARY}
         CACHE INTERNAL "need to cache this"
      )
      #
      # Inherit ObjC loader and link dependency info.
      # Disable with: `mark no-cmakeinherit`
      #
      # // temporarily expand CMAKE_MODULE_PATH
      get_filename_component( _TMP_POSIX_ROOT "${POSIX_LIBRARY}" DIRECTORY)
      get_filename_component( _TMP_POSIX_ROOT "${_TMP_POSIX_ROOT}" DIRECTORY)
      #
      #
      # Search for "DependenciesAndLibraries.cmake" to include.
      # Disable with: `mark no-cmakedependency`
      #
      foreach( _TMP_POSIX_NAME "MulleObjCPosixFoundation" "Posix")
         set( _TMP_POSIX_DIR "${_TMP_POSIX_ROOT}/include/${_TMP_POSIX_NAME}/cmake")
         # use explicit path to avoid "surprises"
         if( EXISTS "${_TMP_POSIX_DIR}/DependenciesAndLibraries.cmake")
            unset( POSIX_DEFINITIONS)
            list( INSERT CMAKE_MODULE_PATH 0 "${_TMP_POSIX_DIR}")
            # we only want top level INHERIT_OBJC_LOADERS, so disable them
            if( NOT NO_INHERIT_OBJC_LOADERS)
               set( NO_INHERIT_OBJC_LOADERS OFF)
            endif()
            list( APPEND _TMP_INHERIT_OBJC_LOADERS ${NO_INHERIT_OBJC_LOADERS})
            set( NO_INHERIT_OBJC_LOADERS ON)
            #
            include( "${_TMP_POSIX_DIR}/DependenciesAndLibraries.cmake")
            #
            list( GET _TMP_INHERIT_OBJC_LOADERS -1 NO_INHERIT_OBJC_LOADERS)
            list( REMOVE_AT _TMP_INHERIT_OBJC_LOADERS -1)
            #
            list( REMOVE_ITEM CMAKE_MODULE_PATH "${_TMP_POSIX_DIR}")
            set( INHERITED_DEFINITIONS
               ${INHERITED_DEFINITIONS}
               ${POSIX_DEFINITIONS}
               CACHE INTERNAL "need to cache this"
            )
            break()
         else()
            message( STATUS "${_TMP_POSIX_DIR}/DependenciesAndLibraries.cmake not found")
         endif()
      endforeach()
      #
      # Search for "objc-loader.inc" in include directory.
      # Disable with: `mark no-cmakeloader`
      #
      if( NOT NO_INHERIT_OBJC_LOADERS)
         foreach( _TMP_POSIX_NAME "MulleObjCPosixFoundation" "Posix")
            set( _TMP_POSIX_FILE "${_TMP_POSIX_ROOT}/include/${_TMP_POSIX_NAME}/objc-loader.inc")
            if( EXISTS "${_TMP_POSIX_FILE}")
               set( INHERITED_OBJC_LOADERS
                  ${INHERITED_OBJC_LOADERS}
                  ${_TMP_POSIX_FILE}
                  CACHE INTERNAL "need to cache this"
               )
               break()
            endif()
         endforeach()
      endif()
   else()
      message( FATAL_ERROR "POSIX_LIBRARY was not found")
   endif()
endif()


if( NOT ${CMAKE_SYSTEM_NAME} MATCHES "Linux")
   if( NOT BSD_LIBRARY)
      find_library( BSD_LIBRARY NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}MulleObjCBSDFoundation${CMAKE_STATIC_LIBRARY_SUFFIX} MulleObjCBSDFoundation ${CMAKE_STATIC_LIBRARY_PREFIX}BSD${CMAKE_STATIC_LIBRARY_SUFFIX} BSD)
      message( STATUS "BSD_LIBRARY is ${BSD_LIBRARY}")
      #
      # the order looks ascending, but due to the way this file is read
      # it ends up being descending, which is what we need
      if( BSD_LIBRARY)
         #
         # Add to BSD_LIBRARY list.
         # Disable with: `mark no-cmakeadd`
         #
         set( ALL_LOAD_DEPENDENCY_LIBRARIES
            ${ALL_LOAD_DEPENDENCY_LIBRARIES}
            ${BSD_LIBRARY}
            CACHE INTERNAL "need to cache this"
         )
         #
         # Inherit ObjC loader and link dependency info.
         # Disable with: `mark no-cmakeinherit`
         #
         # // temporarily expand CMAKE_MODULE_PATH
         get_filename_component( _TMP_BSD_ROOT "${BSD_LIBRARY}" DIRECTORY)
         get_filename_component( _TMP_BSD_ROOT "${_TMP_BSD_ROOT}" DIRECTORY)
         #
         #
         # Search for "DependenciesAndLibraries.cmake" to include.
         # Disable with: `mark no-cmakedependency`
         #
         foreach( _TMP_BSD_NAME "MulleObjCBSDFoundation" "BSD")
            set( _TMP_BSD_DIR "${_TMP_BSD_ROOT}/include/${_TMP_BSD_NAME}/cmake")
            # use explicit path to avoid "surprises"
            if( EXISTS "${_TMP_BSD_DIR}/DependenciesAndLibraries.cmake")
               unset( BSD_DEFINITIONS)
               list( INSERT CMAKE_MODULE_PATH 0 "${_TMP_BSD_DIR}")
               # we only want top level INHERIT_OBJC_LOADERS, so disable them
               if( NOT NO_INHERIT_OBJC_LOADERS)
                  set( NO_INHERIT_OBJC_LOADERS OFF)
               endif()
               list( APPEND _TMP_INHERIT_OBJC_LOADERS ${NO_INHERIT_OBJC_LOADERS})
               set( NO_INHERIT_OBJC_LOADERS ON)
               #
               include( "${_TMP_BSD_DIR}/DependenciesAndLibraries.cmake")
               #
               list( GET _TMP_INHERIT_OBJC_LOADERS -1 NO_INHERIT_OBJC_LOADERS)
               list( REMOVE_AT _TMP_INHERIT_OBJC_LOADERS -1)
               #
               list( REMOVE_ITEM CMAKE_MODULE_PATH "${_TMP_BSD_DIR}")
               set( INHERITED_DEFINITIONS
                  ${INHERITED_DEFINITIONS}
                  ${BSD_DEFINITIONS}
                  CACHE INTERNAL "need to cache this"
               )
               break()
            else()
               message( STATUS "${_TMP_BSD_DIR}/DependenciesAndLibraries.cmake not found")
            endif()
         endforeach()
         #
         # Search for "objc-loader.inc" in include directory.
         # Disable with: `mark no-cmakeloader`
         #
         if( NOT NO_INHERIT_OBJC_LOADERS)
            foreach( _TMP_BSD_NAME "MulleObjCBSDFoundation" "BSD")
               set( _TMP_BSD_FILE "${_TMP_BSD_ROOT}/include/${_TMP_BSD_NAME}/objc-loader.inc")
               if( EXISTS "${_TMP_BSD_FILE}")
                  set( INHERITED_OBJC_LOADERS
                     ${INHERITED_OBJC_LOADERS}
                     ${_TMP_BSD_FILE}
                     CACHE INTERNAL "need to cache this"
                  )
                  break()
               endif()
            endforeach()
         endif()
      else()
         message( FATAL_ERROR "BSD_LIBRARY was not found")
      endif()
   endif()
endif()


if( ${CMAKE_SYSTEM_NAME} MATCHES "Freebsd")
   if( NOT BSDFREE_BSD_LIBRARY)
      find_library( BSDFREE_BSD_LIBRARY NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}MulleObjCFreeBSDFoundation${CMAKE_STATIC_LIBRARY_SUFFIX} MulleObjCFreeBSDFoundation ${CMAKE_STATIC_LIBRARY_PREFIX}FreeBSD${CMAKE_STATIC_LIBRARY_SUFFIX} FreeBSD)
      message( STATUS "BSDFREE_BSD_LIBRARY is ${BSDFREE_BSD_LIBRARY}")
      #
      # the order looks ascending, but due to the way this file is read
      # it ends up being descending, which is what we need
      if( BSDFREE_BSD_LIBRARY)
         #
         # Add to BSDFREE_BSD_LIBRARY list.
         # Disable with: `mark no-cmakeadd`
         #
         set( ALL_LOAD_DEPENDENCY_LIBRARIES
            ${ALL_LOAD_DEPENDENCY_LIBRARIES}
            ${BSDFREE_BSD_LIBRARY}
            CACHE INTERNAL "need to cache this"
         )
         #
         # Inherit ObjC loader and link dependency info.
         # Disable with: `mark no-cmakeinherit`
         #
         # // temporarily expand CMAKE_MODULE_PATH
         get_filename_component( _TMP_BSDFREE_BSD_ROOT "${BSDFREE_BSD_LIBRARY}" DIRECTORY)
         get_filename_component( _TMP_BSDFREE_BSD_ROOT "${_TMP_BSDFREE_BSD_ROOT}" DIRECTORY)
         #
         #
         # Search for "DependenciesAndLibraries.cmake" to include.
         # Disable with: `mark no-cmakedependency`
         #
         foreach( _TMP_BSDFREE_BSD_NAME "MulleObjCFreeBSDFoundation" "FreeBSD")
            set( _TMP_BSDFREE_BSD_DIR "${_TMP_BSDFREE_BSD_ROOT}/include/${_TMP_BSDFREE_BSD_NAME}/cmake")
            # use explicit path to avoid "surprises"
            if( EXISTS "${_TMP_BSDFREE_BSD_DIR}/DependenciesAndLibraries.cmake")
               unset( BSDFREE_BSD_DEFINITIONS)
               list( INSERT CMAKE_MODULE_PATH 0 "${_TMP_BSDFREE_BSD_DIR}")
               # we only want top level INHERIT_OBJC_LOADERS, so disable them
               if( NOT NO_INHERIT_OBJC_LOADERS)
                  set( NO_INHERIT_OBJC_LOADERS OFF)
               endif()
               list( APPEND _TMP_INHERIT_OBJC_LOADERS ${NO_INHERIT_OBJC_LOADERS})
               set( NO_INHERIT_OBJC_LOADERS ON)
               #
               include( "${_TMP_BSDFREE_BSD_DIR}/DependenciesAndLibraries.cmake")
               #
               list( GET _TMP_INHERIT_OBJC_LOADERS -1 NO_INHERIT_OBJC_LOADERS)
               list( REMOVE_AT _TMP_INHERIT_OBJC_LOADERS -1)
               #
               list( REMOVE_ITEM CMAKE_MODULE_PATH "${_TMP_BSDFREE_BSD_DIR}")
               set( INHERITED_DEFINITIONS
                  ${INHERITED_DEFINITIONS}
                  ${BSDFREE_BSD_DEFINITIONS}
                  CACHE INTERNAL "need to cache this"
               )
               break()
            else()
               message( STATUS "${_TMP_BSDFREE_BSD_DIR}/DependenciesAndLibraries.cmake not found")
            endif()
         endforeach()
         #
         # Search for "objc-loader.inc" in include directory.
         # Disable with: `mark no-cmakeloader`
         #
         if( NOT NO_INHERIT_OBJC_LOADERS)
            foreach( _TMP_BSDFREE_BSD_NAME "MulleObjCFreeBSDFoundation" "FreeBSD")
               set( _TMP_BSDFREE_BSD_FILE "${_TMP_BSDFREE_BSD_ROOT}/include/${_TMP_BSDFREE_BSD_NAME}/objc-loader.inc")
               if( EXISTS "${_TMP_BSDFREE_BSD_FILE}")
                  set( INHERITED_OBJC_LOADERS
                     ${INHERITED_OBJC_LOADERS}
                     ${_TMP_BSDFREE_BSD_FILE}
                     CACHE INTERNAL "need to cache this"
                  )
                  break()
               endif()
            endforeach()
         endif()
      else()
         message( FATAL_ERROR "BSDFREE_BSD_LIBRARY was not found")
      endif()
   endif()
endif()


if( ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
   if( NOT BSDDARWIN_LIBRARY)
      find_library( BSDDARWIN_LIBRARY NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}MulleObjCDarwinFoundation${CMAKE_STATIC_LIBRARY_SUFFIX} MulleObjCDarwinFoundation ${CMAKE_STATIC_LIBRARY_PREFIX}Darwin${CMAKE_STATIC_LIBRARY_SUFFIX} Darwin)
      message( STATUS "BSDDARWIN_LIBRARY is ${BSDDARWIN_LIBRARY}")
      #
      # the order looks ascending, but due to the way this file is read
      # it ends up being descending, which is what we need
      if( BSDDARWIN_LIBRARY)
         #
         # Add to BSDDARWIN_LIBRARY list.
         # Disable with: `mark no-cmakeadd`
         #
         set( ALL_LOAD_DEPENDENCY_LIBRARIES
            ${ALL_LOAD_DEPENDENCY_LIBRARIES}
            ${BSDDARWIN_LIBRARY}
            CACHE INTERNAL "need to cache this"
         )
         #
         # Inherit ObjC loader and link dependency info.
         # Disable with: `mark no-cmakeinherit`
         #
         # // temporarily expand CMAKE_MODULE_PATH
         get_filename_component( _TMP_BSDDARWIN_ROOT "${BSDDARWIN_LIBRARY}" DIRECTORY)
         get_filename_component( _TMP_BSDDARWIN_ROOT "${_TMP_BSDDARWIN_ROOT}" DIRECTORY)
         #
         #
         # Search for "DependenciesAndLibraries.cmake" to include.
         # Disable with: `mark no-cmakedependency`
         #
         foreach( _TMP_BSDDARWIN_NAME "MulleObjCDarwinFoundation" "Darwin")
            set( _TMP_BSDDARWIN_DIR "${_TMP_BSDDARWIN_ROOT}/include/${_TMP_BSDDARWIN_NAME}/cmake")
            # use explicit path to avoid "surprises"
            if( EXISTS "${_TMP_BSDDARWIN_DIR}/DependenciesAndLibraries.cmake")
               unset( BSDDARWIN_DEFINITIONS)
               list( INSERT CMAKE_MODULE_PATH 0 "${_TMP_BSDDARWIN_DIR}")
               # we only want top level INHERIT_OBJC_LOADERS, so disable them
               if( NOT NO_INHERIT_OBJC_LOADERS)
                  set( NO_INHERIT_OBJC_LOADERS OFF)
               endif()
               list( APPEND _TMP_INHERIT_OBJC_LOADERS ${NO_INHERIT_OBJC_LOADERS})
               set( NO_INHERIT_OBJC_LOADERS ON)
               #
               include( "${_TMP_BSDDARWIN_DIR}/DependenciesAndLibraries.cmake")
               #
               list( GET _TMP_INHERIT_OBJC_LOADERS -1 NO_INHERIT_OBJC_LOADERS)
               list( REMOVE_AT _TMP_INHERIT_OBJC_LOADERS -1)
               #
               list( REMOVE_ITEM CMAKE_MODULE_PATH "${_TMP_BSDDARWIN_DIR}")
               set( INHERITED_DEFINITIONS
                  ${INHERITED_DEFINITIONS}
                  ${BSDDARWIN_DEFINITIONS}
                  CACHE INTERNAL "need to cache this"
               )
               break()
            else()
               message( STATUS "${_TMP_BSDDARWIN_DIR}/DependenciesAndLibraries.cmake not found")
            endif()
         endforeach()
         #
         # Search for "objc-loader.inc" in include directory.
         # Disable with: `mark no-cmakeloader`
         #
         if( NOT NO_INHERIT_OBJC_LOADERS)
            foreach( _TMP_BSDDARWIN_NAME "MulleObjCDarwinFoundation" "Darwin")
               set( _TMP_BSDDARWIN_FILE "${_TMP_BSDDARWIN_ROOT}/include/${_TMP_BSDDARWIN_NAME}/objc-loader.inc")
               if( EXISTS "${_TMP_BSDDARWIN_FILE}")
                  set( INHERITED_OBJC_LOADERS
                     ${INHERITED_OBJC_LOADERS}
                     ${_TMP_BSDDARWIN_FILE}
                     CACHE INTERNAL "need to cache this"
                  )
                  break()
               endif()
            endforeach()
         endif()
      else()
         message( FATAL_ERROR "BSDDARWIN_LIBRARY was not found")
      endif()
   endif()
endif()


if( ${CMAKE_SYSTEM_NAME} MATCHES "Linux")
   if( NOT LINUX_LIBRARY)
      find_library( LINUX_LIBRARY NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}MulleObjCLinuxFoundation${CMAKE_STATIC_LIBRARY_SUFFIX} MulleObjCLinuxFoundation ${CMAKE_STATIC_LIBRARY_PREFIX}Linux${CMAKE_STATIC_LIBRARY_SUFFIX} Linux)
      message( STATUS "LINUX_LIBRARY is ${LINUX_LIBRARY}")
      #
      # the order looks ascending, but due to the way this file is read
      # it ends up being descending, which is what we need
      if( LINUX_LIBRARY)
         #
         # Add to LINUX_LIBRARY list.
         # Disable with: `mark no-cmakeadd`
         #
         set( ALL_LOAD_DEPENDENCY_LIBRARIES
            ${ALL_LOAD_DEPENDENCY_LIBRARIES}
            ${LINUX_LIBRARY}
            CACHE INTERNAL "need to cache this"
         )
         #
         # Inherit ObjC loader and link dependency info.
         # Disable with: `mark no-cmakeinherit`
         #
         # // temporarily expand CMAKE_MODULE_PATH
         get_filename_component( _TMP_LINUX_ROOT "${LINUX_LIBRARY}" DIRECTORY)
         get_filename_component( _TMP_LINUX_ROOT "${_TMP_LINUX_ROOT}" DIRECTORY)
         #
         #
         # Search for "DependenciesAndLibraries.cmake" to include.
         # Disable with: `mark no-cmakedependency`
         #
         foreach( _TMP_LINUX_NAME "MulleObjCLinuxFoundation" "Linux")
            set( _TMP_LINUX_DIR "${_TMP_LINUX_ROOT}/include/${_TMP_LINUX_NAME}/cmake")
            # use explicit path to avoid "surprises"
            if( EXISTS "${_TMP_LINUX_DIR}/DependenciesAndLibraries.cmake")
               unset( LINUX_DEFINITIONS)
               list( INSERT CMAKE_MODULE_PATH 0 "${_TMP_LINUX_DIR}")
               # we only want top level INHERIT_OBJC_LOADERS, so disable them
               if( NOT NO_INHERIT_OBJC_LOADERS)
                  set( NO_INHERIT_OBJC_LOADERS OFF)
               endif()
               list( APPEND _TMP_INHERIT_OBJC_LOADERS ${NO_INHERIT_OBJC_LOADERS})
               set( NO_INHERIT_OBJC_LOADERS ON)
               #
               include( "${_TMP_LINUX_DIR}/DependenciesAndLibraries.cmake")
               #
               list( GET _TMP_INHERIT_OBJC_LOADERS -1 NO_INHERIT_OBJC_LOADERS)
               list( REMOVE_AT _TMP_INHERIT_OBJC_LOADERS -1)
               #
               list( REMOVE_ITEM CMAKE_MODULE_PATH "${_TMP_LINUX_DIR}")
               set( INHERITED_DEFINITIONS
                  ${INHERITED_DEFINITIONS}
                  ${LINUX_DEFINITIONS}
                  CACHE INTERNAL "need to cache this"
               )
               break()
            else()
               message( STATUS "${_TMP_LINUX_DIR}/DependenciesAndLibraries.cmake not found")
            endif()
         endforeach()
         #
         # Search for "objc-loader.inc" in include directory.
         # Disable with: `mark no-cmakeloader`
         #
         if( NOT NO_INHERIT_OBJC_LOADERS)
            foreach( _TMP_LINUX_NAME "MulleObjCLinuxFoundation" "Linux")
               set( _TMP_LINUX_FILE "${_TMP_LINUX_ROOT}/include/${_TMP_LINUX_NAME}/objc-loader.inc")
               if( EXISTS "${_TMP_LINUX_FILE}")
                  set( INHERITED_OBJC_LOADERS
                     ${INHERITED_OBJC_LOADERS}
                     ${_TMP_LINUX_FILE}
                     CACHE INTERNAL "need to cache this"
                  )
                  break()
               endif()
            endforeach()
         endif()
      else()
         message( FATAL_ERROR "LINUX_LIBRARY was not found")
      endif()
   endif()
endif()
